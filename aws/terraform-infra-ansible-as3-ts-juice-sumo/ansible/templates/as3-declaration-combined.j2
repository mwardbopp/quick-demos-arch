{
    "remark": "Simple HTTP application",
    "class": "ADC",
    "Common": {
        "Shared": {
            "class": "Application",
            "template": "shared",
            "telemetry_local_rule": {
                "remark": "Only required when TS is a local listener",
                "class": "iRule",
                "iRule": "when CLIENT_ACCEPTED {\n  node 127.0.0.1 6514\n}"
            },
            "telemetry_local": {
                "remark": "Only required when TS is a local listener",
                "class": "Service_TCP",
                "virtualAddresses": [
                    "255.255.255.254"
                ],
                "virtualPort": 6514,
                "iRules": [
                    "telemetry_local_rule"
                ]
            },
            "telemetry": {
                "class": "Pool",
                "members": [
                    {
                        "enable": true,
                        "serverAddresses": [
                            "255.255.255.254"
                        ],
                        "servicePort": 6514
                    }
                ],
                "monitors": [
                    {
                        "bigip": "/Common/tcp"
                    }
                ]
            },
            "telemetry_hsl": {
                "class": "Log_Destination",
                "type": "remote-high-speed-log",
                "protocol": "tcp",
                "pool": {
                    "use": "telemetry"
                }
            },
            "telemetry_formatted": {
                "class": "Log_Destination",
                "type": "splunk",
                "forwardTo": {
                    "use": "telemetry_hsl"
                }
            },
            "telemetry_publisher": {
                "class": "Log_Publisher",
                "destinations": [
                    {
                        "use": "telemetry_formatted"
                    }
                ]
            },
            "telemetry_traffic_log_profile": {
                "class": "Traffic_Log_Profile",
                "requestSettings": {
                    "requestEnabled": true,
                    "requestProtocol": "mds-tcp",
                    "requestPool": {
                        "use": "telemetry"
                    },
                    "requestTemplate": "event_source=\"request_logging\",hostname=\"$BIGIP_HOSTNAME\",client_ip=\"$CLIENT_IP\",server_ip=\"$SERVER_IP\",http_method=\"$HTTP_METHOD\",http_uri=\"$HTTP_URI\",virtual_name=\"$VIRTUAL_NAME\",event_timestamp=\"$DATE_HTTP\""
                }
            },
            "telemetry_security_log_profile": {
                "class": "Security_Log_Profile",
                "application": {
                    "localStorage": true,
                    "remoteStorage": "splunk",
                    "protocol": "tcp",
                    "servers": [
                        {
                            "address": "255.255.255.254",
                            "port": "6514"
                        }
                    ],
                    "storageFilter": {
                        "requestType": "illegal-including-staged-signatures"
                    }
                }
            },
            "local_security_log_profile": {
                "class": "Security_Log_Profile",
                "application": {
                    "storageFilter": {
                        "requestType": "all"
                    },
                    "guaranteeLoggingEnabled": true,
                    "guaranteeResponseLoggingEnabled": true,
                    "maxHeaderSize": 200,
                    "maxQuerySize": 1040,
                    "maxRequestSize": 900,
                    "responseLogging": "all"
                }
            }
        }
    },
    "juiceshop": {
      "class": "Tenant",
      "verifiers": {
      },
      "juiceshop": {
        "class": "Application",
        "template": "http",
        "serviceMain": {
          "class": "Service_HTTP",
          "virtualAddresses": [
            "{{ ec2_eni_facts.network_interfaces[0].private_ip_addresses[1].private_ip_address }}"
          ],
          "pool": "juiceshop_pool",
          "profileAnalytics": {
            "use": "AvrProfile"
          },
          "profileTrafficLog": {
            "use": "/Common/Shared/telemetry_traffic_log_profile"
          },
          "policyWAF": {
            "use": "juiceShopWAF"
          },
          "securityLogProfiles": [
            {
              "use": "/Common/Shared/telemetry_security_log_profile"
            }
          ]
        },
        "AvrProfile": {
            "class": "Analytics_Profile",
            "collectMaxTpsAndThroughput": true,
            "collectPageLoadTime": true,
            "collectClientSideStatistics": true,
            "collectUserSession": true,
            "collectUrl": true,
            "collectGeo": true,
            "collectIp": true,
            "collectSubnet": true,
            "collectResponseCode": true,
            "collectUserAgent": true,
            "collectMethod": true,
            "collectOsAndBrowser": true,
            "externalLoggingPublisher": {"use": "/Common/Shared/telemetry_publisher"}
        },
        "juiceshop_pool": {
          "class": "Pool",
          "monitors": [
            "http"
          ],
          "members": [
            {
              "enable": true,
              "servicePort": 3000,
              "serverAddresses": [
                "{{ ec2.instances[0].private_ip }}"
              ]
            }
          ]
        },
        "respond_rule": {
          "class": "iRule",
          "remark": "choose private pool based on IP",
          "iRule": "when HTTP_REQUEST {\nset content \"<HTML><HEAD><TITLE>TEST RESPONDER IRULE</TITLE></HEAD><BODY>TEST RESPONDER IRULE</BODY></HTML>\"\nHTTP::respond 200 content $content\n}"
        },
        "juiceShopWAF": {
            "class": "WAF_Policy",
            "url": "https://raw.githubusercontent.com/s-archer/waf_policies/master/owasp-juice-shop-base.xml",
            "ignoreChanges": true,
            "enforcementMode": "blocking"
        }
      }
    },
    "controls": {
      "class": "Controls",
      "trace": true,
      "logLevel": "debug"
    },
    "schemaVersion": "3.0.0",
    "id": "urn:uuid:33045210-3ab8-4636-9b2a-c98d22ab425d",
    "label": "POC Application"
}  